tau.draws <- as.matrix(samples)[,43]
#hist of mu draws
hist(tau.draws, xlab=expression(tau), main=expression(tau), freq=FALSE, nclass=50)
hist(tau.vec[-burn.in], freq=FALSE, nclass=50, col="red", add=TRUE)
legend("topleft", c("JAGS", "My Gibbs"), fill=c("gray", "red"), cex=0.7)
#define phi draws and pi draws
phi.draws <- matrix(NA, nrow=n.iter*n.chain, ncol=length(y.data))
for(j in 1:20){
phi.draws[,j] <- as.matrix(samples)[,(j+1)]
}
pi.draws <- matrix(NA, nrow=n.iter*n.chain, ncol=length(y.data))
for(j in 1:20){
pi.draws[,j] <- as.matrix(samples)[,(j+21)]
}
#make histogram of phi draws
#par(mfrow=c(2,3))
# for (j in 15:20){
#  hist(phi.draws[,j], nclass=50, main=bquote(phi[.(j)]),
#      ylab=bquote(phi[.(j)]),
#      xlab="iteration", col=gray(0.9))
#abline(v=logit(y.data[j]/m[j]), lwd=3, col="blue") #observed logit
#}
#make histogram of pi draws
par(mfrow=c(2,3))
for (j in 15:17){
hist(pi.draws[,j], nclass=50, main=bquote(pi[.(j)]),
ylab=bquote(pi[.(j)]),
xlab="iteration", col=gray(0.9), freq=FALSE, ylim=c(0, 4000))
hist(pi.mat[-burn.in,j], col="red", nclass=70, freq=FALSE, add=TRUE)
abline(v=y.data[j]/m[j], lwd=3, col="blue") #observed logit
legend("topright", c("JAGS", "My Gibbs"), fill=c("gray", "red"), cex=0.7)
}
for (j in 18:20){
hist(pi.draws[,j], nclass=50, main=bquote(pi[.(j)]),
ylab=bquote(pi[.(j)]),
xlab="iteration", col=gray(0.9), freq=FALSE)
hist(pi.mat[-burn.in,j], col="red", nclass=70, freq=FALSE, add=TRUE)
abline(v=y.data[j]/m[j], lwd=1, col="blue") #observed logit
legend("topright", c("JAGs", "My Gibbs"), fill=c("gray", "red"), cex=0.7)
}
c02 <- read.csv("~/Documents/Stat217Fall2014/quizzes/Quiz23/co2.csv", head=T)
lm.co2 <- lm(log(co2)~Year, data=c02)
summary(lm.co2)
confint(lm.co2)
names(c02)
names(c02)[3] <- "c02"
c02 <- read.csv("~/Documents/Stat217Fall2014/quizzes/Quiz23/co2.csv", head=T)
lm.co2 <- lm(log(c02)~Year, data=c02)
summary(lm.co2)
confint(lm.co2)
names(c02)[3] <- "c02"
head(c02)
c02 <- read.csv("~/Documents/Stat217Fall2014/quizzes/Quiz23/co2.csv", head=T)
names(c02)[3] <- "c02"
lm.co2 <- lm(log(c02)~Year, data=c02)
summary(lm.co2)
confint(lm.co2)
head(pest)
require(Sleuth2)
pest <- ex0817
log.mass <- log(pest$Mass)
log.load <- log(pest$Load)
lm.log <- lm(log.mass~log.load)
summary(lm.log)
confint(lm.log)
head(pest)
lm.log <- lm(log(Mass)~I(log(load)))
lm.log <- lm(log(Mass)~I(log(load)), data=pest)
c02 <- read.csv("~/Documents/Stat217Fall2014/quizzes/Quiz23/co2.csv", head=T)
names(c02)[3] <- "c02"
require(Sleuth2)
pest <- ex0817
lm.log <- lm(log(Mass)~I(log(load)), data=pest)
names(pest)
lm.log <- lm(log(Mass)~I(log(Load)), data=pest)
summary(lm.log)
y.data
median(y.data)
median(y.data/m)
hist(median.pidraws, nclass=20, main="Median Posterior Probability")
hist(median.pidrawsbeta, nclass=20, col="red", add=TRUE)
abline(median(y.data/m))
abline(v=median(y.data/m))
abline(v=median(y.data/m), col="blue", lwd=2)
abline(v=range(y.data/m)[2]-range(y.data/m)[1])
hist(range.pidraws, nclass=20, main="Range of Posterior Probabilities")
hist(range.pidrawsbeta, nclass=20, col="red", add=TRUE)
abline(v=range(y.data/m)[2]-range(y.data/m)[1])
abline(v=range(y.data/m)[2]-range(y.data/m)[1], col="blue", lwd=2)
barplot(table(y1), col="white", main="Number of Zero Counts")
barplot(table(y2), col="red", add=TRUE)
abline(v=sum(y.data==0), col="blue", lwd=2)
y.data
zeros.data <- sum(y.data==0)
zeros.data
y3 <- factor(zeros.data, levels=c(0:18))
barplot(table(y1), col="white", main="Number of Zero Counts")
barplot(table(y2), col="red", add=TRUE)
abline(v=y3, col="blue", lwd=2)
y3
zeros.data <- sum(y.data==0)
y3 <- factor(zeros.data+1, levels=c(0:18))
barplot(table(y1), col="white", main="Number of Zero Counts")
barplot(table(y2), col="red", add=TRUE)
abline(v=y3, col="blue", lwd=2)
abline(v=max(y.data), col="blue", lwd=2)
hist(max.y.sim, nclass=20, freq=FALSE, main="Maximum Posterior Predictive Proportion")
hist(max.ybb.sim, nclass=20, freq=FALSE, col="red", add=TRUE)
abline(v=max(y.data), col="blue", lwd=2)
max.y.sim
hist(max.y.sim, nclass=20, freq=FALSE, main="Maximum Posterior Predictive Proportion")
hist(max.ybb.sim, nclass=20, freq=FALSE, col="red", add=TRUE)
abline(v=max(y.data/m), col="blue", lwd=2)
lm.fit
summary(lm.fit)
glm3way <- glm(cbind(infected, total)-1 ~ block*variety + variety*n.trt*status2,
family = quasibinomial, data = fert.sim1)
# Create some fake data with no differences anywhere
set.seed(983724)
fert.sim1 <- data.frame(expand.grid(
"status2" = c("CNTL", "INOC"),
"n.trt" = c("FALL", "EARLY SPRING", "LATE SPRING"),
"variety" = c("Var1", "Var2", "Var3", "Var4", "Var5"),
"block" = LETTERS[1:6],
"total" = 30),
"infected" = rnbinom(180, 4, 7/9))
#  "infected" = sample(fert2$infected, 180, replace = TRUE))
glm3way <- glm(cbind(infected, total)-1 ~ block*variety + variety*n.trt*status2,
family = quasibinomial, data = fert.sim1)
names(model.matrix(glm3way))
glm3way <- glm(cbind(infected, total)+0 ~ block*variety + variety*n.trt*status2,
family = quasibinomial, data = fert.sim1)
names(model.matrix(glm3way))
head(model.matrix(glm3way))
# Create some fake data with no differences anywhere
set.seed(983724)
fert.sim1 <- data.frame(expand.grid(
"status2" = c("CNTL", "INOC"),
"n.trt" = c("FALL", "EARLY SPRING", "LATE SPRING"),
"variety" = c("Var1", "Var2", "Var3", "Var4", "Var5"),
"block" = LETTERS[1:6],
"total" = 30),
"infected" = rnbinom(180, 4, 7/9))
#  "infected" = sample(fert2$infected, 180, replace = TRUE))
glm3way <- glm(cbind(infected, total) ~ block*variety + variety*n.trt*status2 - 1,
family = quasibinomial, data = fert.sim1)
head(model.matrix(glm3way))
str(model.matrix(glm3way))
set.seed(983724)
fert.sim1 <- data.frame(expand.grid(
"status2" = c("CNTL", "INOC"),
"n.trt" = c("FALL", "EARLY SPRING", "LATE SPRING"),
"variety" = c("Var1", "Var2", "Var3", "Var4", "Var5"),
"block" = LETTERS[1:6],
"row" = 1:30,
"total" = 30),
"infected" = rnbinom(180, 4, 7/9))
head(fert.sim1)
rep(1:5, 5)
fert.sim1 <- data.frame(expand.grid(
"status2" = c("CNTL", "INOC"),
"n.trt" = c("FALL", "EARLY SPRING", "LATE SPRING"),
"variety" = c("Var1", "Var2", "Var3", "Var4", "Var5"),
"block" = LETTERS[1:6],
"row" = rep(1:5, 5),
"total" = 30),
"infected" = rnbinom(180, 4, 7/9))
head(fert.sim1)
fert.sim1 <- data.frame(expand.grid(
"status2" = c("CNTL", "INOC"),
"n.trt" = c("FALL", "EARLY SPRING", "LATE SPRING"),
"variety" = c("Var1", "Var2", "Var3", "Var4", "Var5"),
"block" = LETTERS[1:6],
"row" = 1:5,
"total" = 30),
"infected" = rnbinom(180, 4, 7/9))
head(fert.sim1)
glm3way <- glm(cbind(infected, total) ~ block + row +
variety*n.trt*status2 - 1,
family = quasibinomial, data = fert.sim1)
head(model.matrix(glm3way))
fert.sim1 <- data.frame(expand.grid(
"status2" = c("CNTL", "INOC"),
"n.trt" = c("FALL", "EARLY SPRING", "LATE SPRING"),
"variety" = c("Var1", "Var2", "Var3", "Var4", "Var5"),
"block" = LETTERS[1:6],
"row" = c("1", "2", "3", "4", "5"),
"total" = 30),
"infected" = rnbinom(180, 4, 7/9))
#  "infected" = sample(fert2$infected, 180, replace = TRUE))
glm3way <- glm(cbind(infected, total) ~ block + row +
variety*n.trt*status2 - 1,
family = quasibinomial, data = fert.sim1)
head(model.matrix(glm3way))
1:30
is.factor(1:30)
factor(1:30)
set.seed(983724)
fert.sim1 <- data.frame(expand.grid(
"status2" = c("CNTL", "INOC"),
"n.trt" = c("FALL", "EARLY SPRING", "LATE SPRING"),
"variety" = c("Var1", "Var2", "Var3", "Var4", "Var5"),
"block" = LETTERS[1:6],
"row" = factor(1:30),
"total" = 30),
"infected" = rnbinom(180, 4, 7/9))
#  "infected" = sample(fert2$infected, 180, replace = TRUE))
glm3way <- glm(cbind(infected, total) ~ block + row +
variety*n.trt*status2 - 1,
family = quasibinomial, data = fert.sim1)
head(fert.sim1)
tail(fert.sim1)
head(model.matrix(glm3way))
str(model.matrix(glm3way))
glm3way <- glm(cbind(infected, total) ~ block + row +
variety*n.trt*status2,
family = quasibinomial, data = fert.sim1)
X <- model.matrix(glm3way)[1:180, 1:64]
set.seed(1132)
m <- 30
#Simulate all main effects and interactions
baseline <- runif(1, -7, -4)
block.adj <- rnorm(5, 0, 1)
variety.adj <- rnorm(4, 0, 1)
inoc.effect <- rnorm(1, 0, 1)
nit.effect <- rnorm(2, 0, 1)
rowinblock <- rnorm(29, 0, .5)
variety.nit <- rnorm(8, 0, 0.5)
variety.inoc <- rnorm(4, 0, 0.5)
nit.inoc <- rnorm(2, 0, 0.5)
variety.nit.inoc <- rnorm(8, 0, 0.5)
coefs <- c(baseline, block.adj, variety.adj, inoc.effect, nit.effect, rowinblock, variety.nit, variety.inoc, nit.inoc, variety.nit.inoc)
logitp <- X%*%coefs
p <- exp(logitp)/(1+exp(logitp))
plotcount.fun <- function(p, m=30){
rbinom(1, m, p)
}
y.data <- apply(p, 1, plotcount.fun)
y.data
# Create some fake data with no differences anywhere
set.seed(983724)
fert.sim1 <- data.frame(expand.grid(
"status2" = c("CNTL", "INOC"),
"n.trt" = c("FALL", "EARLY SPRING", "LATE SPRING"),
"variety" = c("Var1", "Var2", "Var3", "Var4", "Var5"),
"row" = factor(1:30),
"block" = LETTERS[1:6],
"total" = 30),
"infected" = rnbinom(180, 4, 7/9))
#  "infected" = sample(fert2$infected, 180, replace = TRUE))
glm3way <- glm(cbind(infected, total) ~ block + row +
variety*n.trt*status2,
family = quasibinomial, data = fert.sim1)
#this grabs the model matrix from the three way interaction binomial model Kenny and I fit (so I don't have to build it myself)
#the code for fitting the glm3way model is in the appendix
X <- model.matrix(glm3way)[1:180, 1:64]
set.seed(1132)
m <- 30
#Simulate all main effects and interactions
baseline <- runif(1, -7, -4)
block.adj <- rnorm(5, 0, 1)
variety.adj <- rnorm(4, 0, 1)
inoc.effect <- rnorm(1, 0, 1)
nit.effect <- rnorm(2, 0, 1)
rowinblock <- rnorm(29, 0, .5)
variety.nit <- rnorm(8, 0, 0.5)
variety.inoc <- rnorm(4, 0, 0.5)
nit.inoc <- rnorm(2, 0, 0.5)
variety.nit.inoc <- rnorm(8, 0, 0.5)
coefs <- c(baseline, block.adj, variety.adj, inoc.effect, nit.effect, rowinblock,
variety.nit, variety.inoc, nit.inoc, variety.nit.inoc)
logitp <- X%*%coefs
p <- exp(logitp)/(1+exp(logitp))
plotcount.fun <- function(p, m=30){
rbinom(1, m, p)
}
y.data <- apply(p, 1, plotcount.fun)
setwd("~/Documents/Stat446/Homeworks/HO8")
setwd("~/Documents/Stat446/homeworks/HO8")
setwd("~/Documents/Stat446/homework/HO8")
read.csv("cherry.dat")
read.table("CHERRY.txt")
read.table("CHERRY.txt", head=T)
cherry <- cherry[-32,]
cherry <- read.table("CHERRY.txt", head=T)
cherry <- cherry[-32,]
cherry
head(cherry)
head(cherry)
lm.1 <- lm(volume ~ diameter, data = cherry)
lm.2 <- lm(volume ~ height, data = cherry)
lm.3 <- lm(volume ~ diameter + height, data = cherry)
require(survey)
thaty <- N * ybar + coef(lm.1)[2] * (tx - N * xbar)
N <- 2967
ybar <- mean(volume)
xbar <- mean(diameter)
tx <- 41835
N <- 2967
ybar <- mean(cherry$volume)
xbar <- mean(cherr$diameter)
tx <- 41835
N <- 2967
ybar <- mean(cherry$volume)
xbar <- mean(cherry$diameter)
tx <- 41835
thaty <- N * ybar + coef(lm.1)[2] * (tx - N * xbar)
xbar
cherry
mean(cherry$diameter)
cherry$diameter
xbar <- mean(factor(cherry$diameter))
xbar <- mean(numeric(cherry$diameter))
is.numeric(cherry$volume)
is.numeric(cherry$height)
is.numeric(cherry$diameter)
xbar <- mean(numeric(cherry$diameter))
as.numeric(cherry$diameter)
xbar <- mean(as.numeric(cherry$diameter))
xbar
N <- 2967
ybar <- mean(cherry$volume)
xbar <- mean(as.numeric(cherry$diameter))
tx <- 41835
thaty <- N * ybar + coef(lm.1)[2] * (tx - N * xbar)
thaty
xbar
ybar
coef(lm.1)
lm.1 <- lm(volume ~ diameter, data = cherry)
lm.2 <- lm(volume ~ height, data = cherry)
lm.3 <- lm(volume ~ diameter + height, data = cherry)
N <- 2967
ybar <- mean(cherry$volume)
xbar <- mean(as.numeric(cherry$diameter))
tx <- 41835
thaty <- N * ybar + coef(lm.1)[2] * (tx - N * xbar)
coef(lm.1)
cherry$diameter <- as.numeric(cherry$diameter)
N <- 2967
ybar <- mean(cherry$volume)
xbar <- mean(cherry$diameter)
tx <- 41835
thaty <- N * ybar + coef(lm.1)[2] * (tx - N * xbar)
coef(lm.1)
lm.1 <- lm(volume ~ diameter, data = cherry)
lm.2 <- lm(volume ~ height, data = cherry)
lm.3 <- lm(volume ~ diameter + height, data = cherry)
coef(lm.1)
N <- 2967
ybar <- mean(cherry$volume)
xbar <- mean(cherry$diameter)
tx <- 41835
thaty <- N * ybar + coef(lm.1)[2] * (tx - N * xbar)
thaty
ybar
xbar
setwd("~/Documents/Stat446/homework/HO8")
cherry <- read.table("CHERRY.txt", head = T)
setwd("~/Documents/Stat446/homework/HO8")
cherry <- read.table("CHERRY.txt", head = T)
is.numeric(cherry$diameter)
setwd("~/Documents/Stat446/homework/HO8")
cherry <- read.table("CHERRY.txt", head = T)
lm.1 <- lm(volume ~ diameter, data = cherry)
lm.2 <- lm(volume ~ height, data = cherry)
lm.3 <- lm(volume ~ diameter + height, data = cherry)
N <- 2967
ybar <- mean(cherry$volume)
xbar <- mean(cherry$diameter)
tx <- 41835
thaty <- N * ybar + coef(lm.1)[2] * (tx - N * xbar)
xbar
thaty
head(cherry)
summary(lm.1)
anova(lm.1)
var(anova(lm.1))
sqrt(18.1)
mse(lm.1)
MSE(lm.1)
var.cov(lm.1)
anova(lm.1)[2]
anova(lm.1)[3,2]
anova(lm.1)[3]
anova(lm.1)[,3]
anova(lm.1)[2,3]
tstar <- qt(0.975, 29)
ci <- c(thaty - tstar * sqrt(var.that.y), thaty + tstar * sqrt(var.that.y))
var.that.y <- c * mse
mse <- anova(lm.1)[2, 3]
var.that.y <- c * mse
c <- N * (N - n) / n
mse <- anova(lm.1)[2, 3]
var.that.y <- c * mse
n <- 31
N <- 2967
ybar <- mean(cherry$volume)
xbar <- mean(cherry$diameter)
tx <- 41835
thaty <- N * ybar + coef(lm.1)[2] * (tx - N * xbar)
c <- N * (N - n) / n
mse <- anova(lm.1)[2, 3]
var.that.y <- c * mse
tstar <- qt(0.975, 29)
ci <- c(thaty - tstar * sqrt(var.that.y), thaty + tstar * sqrt(var.that.y))
ci
xbar <- mean(cherry$height)
tx <- 201756
thaty <- N * ybar + coef(lm.2)[2] * (tx - N * xbar)
mse <- anova(lm.2)[2, 3]
var.that.y <- c * mse
ci <- c(thaty - tstar * sqrt(var.that.y), thaty + tstar * sqrt(var.that.y))
thaty
ci
lm.3
summary(lm.3)
ci
xbarh <- mean(cherry$height)
txh <- 201756
thaty <- N * ybar + coef(lm.2)[2] * (txh - N * xbarh)
mse <- anova(lm.2)[2, 3]
var.that.y <- c * mse
thaty <- N * ybar + coef(lm.3)[2] * (txd - N * xbard) +
coef(lm.3)[3] * (txh - N * xbarh)
n <- 31
N <- 2967
ybar <- mean(cherry$volume)
xbard <- mean(cherry$diameter)
txd <- 41835
thaty <- N * ybar + coef(lm.1)[2] * (txd - N * xbard)
c <- N * (N - n) / n
mse1 <- anova(lm.1)[2, 3]
var.that.y1 <- c * mse1
tstar <- qt(0.975, 29)
ci <- c(thaty - tstar * sqrt(var.that.y1), thaty + tstar * sqrt(var.that.y))
xbarh <- mean(cherry$height)
txh <- 201756
thaty <- N * ybar + coef(lm.2)[2] * (txh - N * xbarh)
mse2 <- anova(lm.2)[2, 3]
var.that.y2 <- c * mse2
ci <- c(thaty - tstar * sqrt(var.that.y2), thaty + tstar * sqrt(var.that.y))
thaty <- N * ybar + coef(lm.3)[2] * (txd - N * xbard) +
coef(lm.3)[3] * (txh - N * xbarh)
mse3 <- anova(lm.3)[2, 3]
thaty3 <- N * ybar + coef(lm.3)[2] * (txd - N * xbard) +
coef(lm.3)[3] * (txh - N * xbarh)
mse3 <- anova(lm.3)[2, 3]
var.that.y3 <- c * mse3
ci <- c(thaty3 - tstar * sqrt(var.that.y3), thaty3 + tstar * sqrt(var.that.y))
thaty3 <- N * ybar + coef(lm.3)[2] * (txd - N * xbard) +
coef(lm.3)[3] * (txh - N * xbarh)
mse3 <- anova(lm.3)[2, 3]
var.that.y3 <- c * mse3
ci3 <- c(thaty3 - tstar * sqrt(var.that.y3), thaty3 + tstar * sqrt(var.that.y))
thaty3
ci3
thaty3 <- N * ybar + coef(lm.3)[2] * (txd - N * xbard) +
coef(lm.3)[3] * (txh - N * xbarh)
mse3 <- anova(lm.3)[2, 3]
var.that.y3 <- c * mse3
ci3 <- c(thaty3 - tstar * sqrt(var.that.y3), thaty3 + tstar * sqrt(var.that.y3))
ci3
mse3 <- anova(lm.3)[3, 3]
anova(lm.3)
thaty3 <- N * ybar + coef(lm.3)[2] * (txd - N * xbard) +
coef(lm.3)[3] * (txh - N * xbarh)
mse3 <- anova(lm.3)[3, 3]
var.that.y3 <- c * mse3
ci3 <- c(thaty3 - tstar * sqrt(var.that.y3), thaty3 + tstar * sqrt(var.that.y3))
ci3
mse1
mse2
summary(lm.1)
summary(lm.2)
lenth(ci1)
ci1[2]-ci1[1]
n <- 31
N <- 2967
ybar <- mean(cherry$volume)
xbard <- mean(cherry$diameter)
txd <- 41835
thaty1 <- N * ybar + coef(lm.1)[2] * (txd - N * xbard)
c <- N * (N - n) / n
mse1 <- anova(lm.1)[2, 3]
var.that.y1 <- c * mse1
tstar <- qt(0.975, 29)
ci1 <- c(thaty1 - tstar * sqrt(var.that.y1), thaty1 + tstar * sqrt(var.that.y))
xbarh <- mean(cherry$height)
txh <- 201756
thaty2 <- N * ybar + coef(lm.2)[2] * (txh - N * xbarh)
mse2 <- anova(lm.2)[2, 3]
var.that.y2 <- c * mse2
ci2 <- c(thaty2 - tstar * sqrt(var.that.y2), thaty2 + tstar * sqrt(var.that.y))
thaty3 <- N * ybar + coef(lm.3)[2] * (txd - N * xbard) +
coef(lm.3)[3] * (txh - N * xbarh)
mse3 <- anova(lm.3)[3, 3]
var.that.y3 <- c * mse3
ci3 <- c(thaty3 - tstar * sqrt(var.that.y3), thaty3 + tstar * sqrt(var.that.y3))
ci1[]-ci1[1]
ci1[]-ci1[1]
ci1[2]-ci1[1]
ci2[2]-ci2[1]
summary(lm.2)
summary(lm.1)
summary(lm.3)
anova(lm.1, lm.3)
ci3[2]-ci3[1]
ci1[2]-ci1[1]
mse3
mse1
ci3
