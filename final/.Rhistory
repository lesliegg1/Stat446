which(length.totals == "Brooks Creek")
which(pools == "Brooks Creek")
sample.fun <- function(stream_name){
sample(subset(pools, stream == stream_name)$reach,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)])
}
sample.fun("Brooks Creek")
sample.fun(Panamaker Creek)
sample.fun("Panamaker Creek")
tapply(sample.fun, pools$stream)
?tapply
tapply(pools$stream, sample.fun)
tapply(pools$stream, unique(pools$stream), sample.fun)
n <- 17; fac <- factor(rep(1:3, length = n), levels = 1:5)
table(fac)
tapply(1:n, fac, sum)
fac
sample.fun(unique(pools$stream))
sample.fun(as.character(unique(pools$stream)))
unique(pools$stream)
apply(cbind(unique(pools$stream)), 1, as.character)
sample.fun <- function(stream_name){
sample(subset(pools, stream == as.character(stream_name))$reach,
size = n.10[which(length.totals == as.character(stream_name))],
prob = length.probs[which(pools == as.character(stream_name))])
}
sample.fun(Brooks Creek)
as.character(Brooks Creek)
as.character(BrooksCreek)
sample.fun <- function(stream_name){
sample(subset(pools, stream == stream_name)$reach,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)])
}
sample.fun("Brooks Creek")
sample.fun(c("Brooks Creek", "Bypass Channel"))
apply(cbind("Brooks Creek", "Bypass Channel"),1, sample.fun)
apply(cbind("Brooks Creek", "Bypass Channel"),2, sample.fun)
apply(rbind("Brooks Creek", "Bypass Channel"),1, sample.fun)
apply(rbind(Brooks Creek, "Bypass Channel"),1, sample.fun)
unique(pools$stream)
apply(rbind('Brooks Creek', "Bypass Channel"),1, sample.fun)
paste(shQuote(unique(pools$stream)), collapse=", ")
sample <- apply(rbind(quote.streamnames), 1, sample.fun)
quote.streamnames <- paste(shQuote(unique(pools$stream)), collapse=", ")
sample <- apply(rbind(quote.streamnames), 1, sample.fun)
quote.streamnames <- cat(paste(shQuote(unique(pools$stream), type="cmd"), collapse=", "))
quote.streamnames <- paste(shQuote(unique(pools$stream), type="cmd"), collapse=", ")
quote.streamnames
quote.streamnames <- cat(paste(shQuote(unique(pools$stream), type="cmd"), collapse=", "))
sample <- apply(rbind(quote.streamnames), 1, sample.fun)
quote.streamnames <- paste(shQuote(unique(pools$stream), type="cmd"), collapse=", ")
quote.streamnames
sample <- apply(rbind(quote.streamnames), 1, sample.fun)
shQuote(unique(pools$stream))
shQuote(unique(pools$stream), type = "cmd")
quote.streamnames <- shQuote(unique(pools$stream))
sample <- apply(rbind(quote.streamnames), 1, sample.fun)
quote.streamnames
str(quote.streamnames)
paste("'",as.character(unique(pools$stream)),"'",collapse=", ",sep="")
paste(shQuote(unique(pools$stream)), collapse=", ")
test <- paste(shQuote(unique(pools$stream)), collapse=", ")
is.vector(test)
str(test)
dput(as.character(unique(pools$stream)))
quote.names <- dput(as.character(unique(pools$stream)))
sample <- apply(rbind(quote.names), 1, sample.fun)
rbind(quote.names)
sample.fun(quote.names)
quote.names <- as.vector(dput(as.character(unique(pools$stream))))
sample <- apply(rbind(c("Brooks Creek", "Buncombe Hollow Creek", "Bypass Channel", "Cape Horn Creek", "Cougar Creek", "Dog Creek")), 1, sample.fun)
sample <- apply(rbind("Brooks Creek", "Buncombe Hollow Creek", "Bypass Channel", "Cape Horn Creek", "Cougar Creek", "Dog Creek"), 1, sample.fun)
sample
sample <- apply(rbind("Brooks Creek", "Buncombe Hollow Creek", "Bypass Channel", "Cape Horn Creek", "Cougar Creek", "Dog Creek", "Indian George Creek", "Jim Creek", "Lower Speelyai", "North Siouxon Creek", "Ole Creek", "Panamaker Creek", "Siouxon Creek", "Speelyai Creek", "West Fork Speelyai Creek", "West Tributary Speelyai Creek"), 1, sample.fun)
@
sample
as.vecto(sample)
as.vector(sample)
sample <- c(sample[[1]], sample[[2]])
sample
sample[[1:16]]
sample[[]]
for(i in 1:16){
sample[i] <- sample[[i]]
}
for(i in 1:16){
sample.all[i] <- sample[[i]]
}
sample.all <- numeric(length(unique(pools$stream)))
for(i in 1:16){
sample.all[i] <- sample[[i]]
}
sample.all
sample.all <- numeric(length(unique(pools$stream)))
sample.all
sample.all <- numeric(length(n.10))
for(i in 1:16){
sample.all[i] <- sample[[i]]
}
sample.all <- numeric(length(n.10))
for(i in 1:length(n.10)){
sample.all[i] <- sample[[i]]
}
sample.all
sample.all <- numeric(length(n.10))
sample.al
sample.all
sample[[3]]
sample[[4]]
sample
sample <- apply(rbind("Brooks Creek", "Buncombe Hollow Creek", "Bypass Channel", "Cape Horn Creek", "Cougar Creek", "Dog Creek", "Indian George Creek", "Jim Creek", "Lower Speelyai", "North Siouxon Creek", "Ole Creek", "Panamaker Creek", "Siouxon Creek", "Speelyai Creek", "West Fork Speelyai Creek", "West Tributary Speelyai Creek"), 1, sample.fun)
sample.all <- numeric(length(n.10))
for(i in 1:length(n.10)){
sample.all[i] <- sample[[i]]
}
sample
sample.all <- numeric(length(n.10))
for(i in 1:length(unique(pools$stream))){
sample.all[i] <- sample[[i]]
}
sample.all <- numeric(length(n.10))
for(i in 1:16){
sample.all[i] <- sample[[i]]
}
sample
sample
sample.all
sample.all <- c(sample[[1]], sample[[2]], sample[[3]], sample[[4]], sample[[5]], sample[[6]], sample[[7]])
sample.all
sample.fun("Brooks Creek")
sample.fun("Brooks Creek")
sample.fun("Brooks Creek")
test <- sample.fun("Brooks Creek")
test[1]
test
sample.brooks <- sample.fun("Brooks Creek")
sample.brooks
sample.bun <- sample.fun("Buncombe Hollow Creek")
c(sample.brooks, sample.bun)
c(as.character(sample.brooks), sample.bun)
sample.brooks <- as.character(sample.fun("Brooks Creek"))
sample.brooks
sample.fun <- function(stream_name){
sample(numeric(subset(pools, stream == stream_name)$reach),
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)])
}
sample.brooks <- as.character(sample.fun("Brooks Creek"))
sample.brooks <- sample.fun("Brooks Creek")
sample.fun <- function(stream_name){
sample <- sample(subset(pools, stream == stream_name)$reach,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)])
return(numeric(sample))
}
sample.fun
sample.brooks <- sample.fun("Brooks Creek")
sample.fun <- function(stream_name){
sample <- sample(subset(pools, stream == stream_name)$reach,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)])
return(factor(sample))
}
sample.brooks <- sample.fun("Brooks Creek")
sample.brooks
head(pools)
which(pools==sample.brooks)
which(pools=="BRK_001")
pools[which(pools=="BRK_001"),]
subset(pools, reach == "BRK_001")
which(pools$reach=="BRK_001")
which(pools$reach==brooks.sample)
which(pools$reach==sample.brooks)
pools$reach.num <- 1:109
head(pools)
sample.fun <- function(stream_name){
sample <- sample(subset(pools, stream == stream_name)$reach.num,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)])
return(factor(sample))
}
sample.fun
sample.brooks <- sample.fun("Brooks Creek")
sample.brooks
sample <- apply(rbind("Brooks Creek", "Buncombe Hollow Creek", "Bypass Channel", "Cape Horn Creek", "Cougar Creek", "Dog Creek", "Indian George Creek", "Jim Creek", "Lower Speelyai", "North Siouxon Creek", "Ole Creek", "Panamaker Creek", "Siouxon Creek", "Speelyai Creek", "West Fork Speelyai Creek", "West Tributary Speelyai Creek"), 1, sample.fun)
sample.all <- c(sample[[1]], sample[[2]], sample[[3]], sample[[4]], sample[[5]], sample[[6]], sample[[7]])
sample.bun <- sample.fun("Buncombe Hollow Creek")
sample.bun
c(sample.brooks, sample.bun)
sample.fun <- function(stream_name){
sample <- sample(subset(pools, stream == stream_name)$reach.num,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)])
return(sample)
}
sample.brooks <- sample.fun("Brooks Creek")
sample.brooks
sample.bun <- sample.fun("Buncombe Hollow Creek")
sample.bun
c(sample.brooks, sample.bun)
unique(pools$stream)
apply(rbind("Brooks Creek", "Buncombe Hollow Creek"), 1, sample.fun)
unlist(apply(rbind("Brooks Creek", "Buncombe Hollow Creek"), 1, sample.fun))
sample.all <- unlist(apply(rbind("Brooks Creek", "Buncombe Hollow Creek", "Bypass Channel", "Cape Horn Creek", "Cougar Creek", "Dog Creek", "Indian George Creek", "Jim Creek", "Lower Speelyai", "North Siouxon Creek", "Ole Creek", "Panamaker Creek", "Siouxon Creek", "Speelyai Creek", "West Fork Speelyai Creek", "West Tributary Speelyai Creek"), 1, sample.fun))
sample.all <- unlist(apply(rbind("Brooks Creek", "Buncombe Hollow Creek", "Bypass Channel", "Cape Horn Creek", "Cougar Creek", "Dog Creek", "Indian George Creek"), 1, sample.fun))
sample.all <- unlist(apply(rbind("Brooks Creek", "Buncombe Hollow Creek", 1, sample.fun))
sample.all <- unlist(apply(rbind("Brooks Creek", "Buncombe Hollow Creek"), 1, sample.fun))
sample.all <- unlist(apply(rbind("Brooks Creek", "Buncombe Hollow Creek", "Bypass Channel", "Cape Horn Creek"), 1, sample.fun))
sample.all <- unlist(apply(rbind("Brooks Creek", "Buncombe Hollow Creek", "Bypass Channel", "Cape Horn Creek", "Cougar Creek", "Dog Creek", "Indian George Creek"), 1, sample.fun))
sample.all <- unlist(apply(rbind("Brooks Creek", "Buncombe Hollow Creek", "Bypass Channel", "Cape Horn Creek", "Cougar Creek"), 1, sample.fun))
sample.all <- unlist(apply(rbind("Brooks Creek", "Buncombe Hollow Creek", "Bypass Channel", "Cape Horn Creek", "Cougar Creek", "Dog Creek"), 1, sample.fun))
sample.fun("Dog Creek")
length.probs[which(pools == "Dog Creek")]
n.10[which(length.totals == "Dog Creek")]
sample(2, size = 1, prob = 1)
sample.fun <- function(stream_name){
sample <- sample(subset(pools, stream == stream_name)$reach.num,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)],
replace = FALSE)
return(sample)
}
sample.fun("Brooks Creek")
sample(c(2,3), size = 2, prob =c(1,2))
sample(c(2), size = 1, prob =c(1))
sample(c(2), size = 1)
length(pools=="Dog Creek")
length(pools$stream=="Dog Creek")
length(subset(pools, stream=="Dog Creek"))
length(subset(pools, stream=="Dog Creek")$stream)
sample.fun <- function(stream_name){
sample <- ifelse(length(subset(pools, stream==stream_name)$stream) > 1,
sample(subset(pools, stream == stream_name)$reach.num,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)],
replace = FALSE),
sample(subset(pools, stream == stream_name)$reach.num,
size = n.10[which(length.totals == stream_name)],
replace = FALSE))
return(sample)
}
sample.fun("Dog Creek")
sample.fun("Dog Creek")
sample.fun("Dog Creek")
sample.fun("Dog Creek")
sample.fun("Dog Creek")
sample.fun("Dog Creek")
sample.fun("Dog Creek")
sample.fun <- function(stream_name){
sample <- sample(subset(pools, stream == stream_name)$reach.num,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)],
replace = FALSE)
return(sample)
}
sample.dog <- sample(subset(pools, stream == "Dog Creek")$reach.num,
size = n.10[which(length.totals == "Dog Creek")])
sample.dog
sample.dog <- sample(subset(pools, stream == "Dog Creek")$reach.num,
size = n.10[which(length.totals == "Dog Creek")])
sample.dog
head(pools)
pools
sample.brooks <- sample.fun("Brooks Creek")
sample.bun <- sample.fun("Buncombe Hollow Creek")
sample.bypass <- sample.fun("Bypass Channel")
sample.cape <- sample.fun("Cape Horn Creek")
sample.cougar <- sample.fun("Cougar Creek")
sample.dog <- 48
sample.indian <- sample.fun("Indian George Creek")
sample.jim <- sample.fun("Jim Creek")
sample.lsp <- 58
sample.nsioux <- sample.fun("North Siouxon Creek")
sample.ole <- sample.fun("Ole Creek")
sample.pan <- sample.fun("Panamaker Creek")
sample.sioux <- sample.fun("Siouxon Creek")
sample.sp <- sample.fun("Speelyai Creek")
sample.wfsp <- sample.fun("West Fork Speelyai Creek")
sample.wtsp <- sample.fun("West Tributary Speelyai Creek")
sample.all <- c(sample.brooks, sample.bun, sample.bypass, sample.cape, sample.dog, sample.indian, sample.jim, sample.lsp, sample.nsioux, sample.ole, sample.pan, sample.sioux, sample.sp, sample.wfsp, sample.wtsp)
sample.all
which(sample.all)
pools[c(sample.all),]
nsim <- 10
pools$reach.num <- 1:109
sample.fun <- function(stream_name){
sample <- sample(subset(pools, stream == stream_name)$reach.num,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)],
replace = FALSE)
return(sample)
}
strata.uneq <- function(n_vec){
sample,all <- matrix(NA, nrow = sum(n_vec), ncol = nsim)
for(i in 1:nsim){
sample.brooks <- sample.fun("Brooks Creek")
sample.bun <- sample.fun("Buncombe Hollow Creek")
sample.bypass <- sample.fun("Bypass Channel")
sample.cape <- sample.fun("Cape Horn Creek")
sample.cougar <- sample.fun("Cougar Creek")
sample.dog <- 48
sample.indian <- sample.fun("Indian George Creek")
sample.jim <- sample.fun("Jim Creek")
sample.lsp <- 58
sample.nsioux <- sample.fun("North Siouxon Creek")
sample.ole <- sample.fun("Ole Creek")
sample.pan <- sample.fun("Panamaker Creek")
sample.sioux <- sample.fun("Siouxon Creek")
sample.sp <- sample.fun("Speelyai Creek")
sample.wfsp <- sample.fun("West Fork Speelyai Creek")
sample.wtsp <- sample.fun("West Tributary Speelyai Creek")
sample.all[, i] <- c(sample.brooks, sample.bun, sample.bypass, sample.cape,
sample.dog, sample.indian, sample.jim, sample.lsp,
sample.nsioux, sample.ole, sample.pan, sample.sioux,
sample.sp, sample.wfsp, sample.wtsp)
}
return(sample.all)
}
pools$reach.num <- 1:109
sample.fun <- function(stream_name){
sample <- sample(subset(pools, stream == stream_name)$reach.num,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)],
replace = FALSE)
return(sample)
}
strata.uneq <- function(n_vec){
sample.all <- matrix(NA, nrow = sum(n_vec), ncol = nsim)
for(i in 1:nsim){
sample.brooks <- sample.fun("Brooks Creek")
sample.bun <- sample.fun("Buncombe Hollow Creek")
sample.bypass <- sample.fun("Bypass Channel")
sample.cape <- sample.fun("Cape Horn Creek")
sample.cougar <- sample.fun("Cougar Creek")
sample.dog <- 48
sample.indian <- sample.fun("Indian George Creek")
sample.jim <- sample.fun("Jim Creek")
sample.lsp <- 58
sample.nsioux <- sample.fun("North Siouxon Creek")
sample.ole <- sample.fun("Ole Creek")
sample.pan <- sample.fun("Panamaker Creek")
sample.sioux <- sample.fun("Siouxon Creek")
sample.sp <- sample.fun("Speelyai Creek")
sample.wfsp <- sample.fun("West Fork Speelyai Creek")
sample.wtsp <- sample.fun("West Tributary Speelyai Creek")
sample.all[, i] <- c(sample.brooks, sample.bun, sample.bypass, sample.cape,
sample.dog, sample.indian, sample.jim, sample.lsp,
sample.nsioux, sample.ole, sample.pan, sample.sioux,
sample.sp, sample.wfsp, sample.wtsp)
}
return(sample.all)
}
sample.10 <- strata.uneq(n.10)
sample.all
length(sample.all)
pools$reach.num <- 1:109
sample.fun <- function(stream_name){
sample <- sample(subset(pools, stream == stream_name)$reach.num,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)],
replace = FALSE)
return(sample)
}
strata.uneq <- function(n_vec){
sample.all <- matrix(NA, nrow = sum(n_vec), ncol = nsim)
for(i in 1:nsim){
sample.brooks <- sample.fun("Brooks Creek")
sample.bun <- sample.fun("Buncombe Hollow Creek")
sample.bypass <- sample.fun("Bypass Channel")
sample.cape <- sample.fun("Cape Horn Creek")
sample.cougar <- sample.fun("Cougar Creek")
sample.dog <- 48
sample.indian <- sample.fun("Indian George Creek")
sample.jim <- sample.fun("Jim Creek")
sample.lsp <- 58
sample.nsioux <- sample.fun("North Siouxon Creek")
sample.ole <- sample.fun("Ole Creek")
sample.pan <- sample.fun("Panamaker Creek")
sample.sioux <- sample.fun("Siouxon Creek")
sample.sp <- sample.fun("Speelyai Creek")
sample.wfsp <- sample.fun("West Fork Speelyai Creek")
sample.wtsp <- sample.fun("West Tributary Speelyai Creek")
sample.all[, i] <- c(sample.brooks, sample.bun, sample.bypass, sample.cape,
sample.cougar,
sample.dog, sample.indian, sample.jim, sample.lsp,
sample.nsioux, sample.ole, sample.pan, sample.sioux,
sample.sp, sample.wfsp, sample.wtsp)
}
return(sample.all)
}
sample.10 <- strata.uneq(n.10)
sample.10
pi.10 <- numeric(length(pools$reach))
for(i in 1:length(pools$reach)) {
pi.10[i] <- sum(sample.10==i)/nsim
}
pi.10
pools$reach.num <- 1:109
sample.fun <- function(stream_name){
sample <- sample(subset(pools, stream == stream_name)$reach.num,
size = n.10[which(length.totals == stream_name)],
prob = length.probs[which(pools == stream_name)],
replace = FALSE)
return(sample)
}
nsim <- 1000
strata.uneq <- function(n_vec){
sample.all <- matrix(NA, nrow = sum(n_vec), ncol = nsim)
for(i in 1:nsim){
sample.brooks <- sample.fun("Brooks Creek")
sample.bun <- sample.fun("Buncombe Hollow Creek")
sample.bypass <- sample.fun("Bypass Channel")
sample.cape <- sample.fun("Cape Horn Creek")
sample.cougar <- sample.fun("Cougar Creek")
sample.dog <- 48
sample.indian <- sample.fun("Indian George Creek")
sample.jim <- sample.fun("Jim Creek")
sample.lsp <- 58
sample.nsioux <- sample.fun("North Siouxon Creek")
sample.ole <- sample.fun("Ole Creek")
sample.pan <- sample.fun("Panamaker Creek")
sample.sioux <- sample.fun("Siouxon Creek")
sample.sp <- sample.fun("Speelyai Creek")
sample.wfsp <- sample.fun("West Fork Speelyai Creek")
sample.wtsp <- sample.fun("West Tributary Speelyai Creek")
sample.all[, i] <- c(sample.brooks, sample.bun, sample.bypass, sample.cape,
sample.cougar,
sample.dog, sample.indian, sample.jim, sample.lsp,
sample.nsioux, sample.ole, sample.pan, sample.sioux,
sample.sp, sample.wfsp, sample.wtsp)
}
return(sample.all)
}
sample.10 <- strata.uneq(n.10)
for(i in 1:length(pools$reach)) {
pi.10[i] <- sum(sample.10==i)/nsim
}
pi.10
sample.10
xyplot(pi.10~length|stream, data = pools)
pi.10
sum(pi.10)
n.30
setwd("~/Documents/Stat446/final")
cereal <- read.table("FINAL_P1.txt")
cereal <- read.table("FNL_P1.txt")
getwd()
cereal <- read.table("FNL_P1.TXT")
head(cereal)
cereal
cereal <- read.csv("FNL_P1.TXT")
cereal
cereal <- read.csv("FNL_P1.TXT", head = FALSE)
cereal
cereal <- read.table("FNL_P1.TXT", head = FALSE)
numeric(cereal)
unlist(cereal)
c(cereal)
cereal
cereal <- read.csv("FNL_P1.TXT", head = FALSE)
cereal
cereal <- read.csv("FNL_P1.TXT", head = FALSE)
cereal
cereal <- read.csv("FNL_P1.TXT", head = FALSE, row.names = FALSE)
cereal <- read.csv("FNL_P1.TXT", head = FALSE)
cereal <- cereal[-cereal$V13]
cereal$V13
cereal <- cereal[-c(cereal$V13)]
cereal <- cereal$V1:cereal$V13
cereal
cereal <- cereal$V1:cereal$V12
V1:V12
cereal$V1
length(cereal)
str(cereal)
cereal <- read.csv("FNL_P1.TXT", head = FALSE)
str(cereal)
cereal$V1
cereal$V1:cereal$V12
cereal
cereal[1,]
cereal[,1:12]
golf <- read.csv("GOLF.TXT")
golf
golf <- read.csv("GOLF.TXT")
golf
golf <- read.csv("GOLF.TXT", head = TRUE)
golf
names(golf) <- c("obs", "type", "greenfee", "yardage")
golf <- read.csv("GOLF.TXT", head = TRUE, row.names = obs..)
golf <- read.csv("GOLF.TXT", head = TRUE, row.names = obs.)
golf <- read.csv("GOLF.TXT", head = TRUE, row.names = "obs..")
golf
golf <- read.csv("GOLF.TXT", head = TRUE, row.names = "obs.")
?row.names
length(golf)
source('~/.active-rstudio-document', echo=TRUE)
golf <- read.csv("GOLF.TXT", head = TRUE)
str(golf)
golf <- data.frame(read.csv("GOLF.TXT", head = TRUE))
str(golf)
golf <- read.csv("GOLF.TXT", head = TRUE)
str(golf)
golf <- read.table("GOLF.TXT", head = TRUE)
golf
str(golf)
names(golf) <- c("obs", "type", "greenfee", "yardage")
head(golf)
golf <- read.table("GOLF.TXT", head = TRUE)
names(golf)
